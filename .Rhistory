geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(title = "Correlation between observed ALL phenology dates and mean annual ppt",
x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal()
ggplot(E.pp.obs, aes(x = mean.ppt, y = ordinal_date, color=NA)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(title = "Correlation between observed ALL phenology dates and mean annual ppt",
x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal()
ggplot(E.pp.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(title = "Correlation between observed ALL phenology dates and mean annual ppt",
x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal()
ggplot(E.pp.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(title = "Correlation between observed ALL phenology dates and mean annual ppt",
x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
ggplot(E.pp.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
##Earliest data separated by species
eMBSobs <-ggplot(E.mbs.obs, aes(x = mean.ppt, y = ordinal_date, color="black")) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal()
ggplot(E.pp.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme(panel.background = element_blank(),
legend.position = "none")
ggplot(E.pp.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
ePPobs<-ggplot(E.pp.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
##Earliest data separated by species
eMBSobs <-ggplot(E.mbs.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type) +
##Earliest data separated by species
eMBSobs <-ggplot(E.mbs.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type) +
##Earliest data separated by species
eMBSobs <-ggplot(E.mbs.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
eMBSobs
#earliest by species at MBS (herbarium data)
eMBSspec <-ggplot(E.mbs.spec, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
eMBSspec
#earliest by species at PP (herbarium data)
ePPspec<-ggplot(E.pp.spec, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
ePPspec
#PRECIP PLOTS
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/eMBSobs.png", eMBSobs, width = 8, height = 4, units="in", dpi = 300)
#PRECIP PLOTS
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/eMBSobs.png", eMBSobs, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/ePPobs", ePPobs, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/ePPobs.png", ePPobs, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/eMBSspec.png", eMBSspec, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/ePPspec.png", ePPspec, width = 8, height = 6, units="in", dpi = 300)
####TEMPERATURE
#earliest by species at MBS (observational data)
eMBSobs2 <-ggplot(E.mbs.obs, aes(x = mean.temp, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Temperature (degrees F)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
eMBSobs2
E.mbs.obs
names(E.mbs.obs)
####TEMPERATURE
#earliest by species at MBS (observational data)
eMBSobs2 <-ggplot(E.mbs.obs, aes(x = mean.tmean, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Temperature (degrees F)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
eMBSobs2
#earliest by species at PP (observational data)
ePPobs2 <-ggplot(E.pp.obs, aes(x = mean.tmean, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Temperature (degrees F)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
ePPobs2
#earliest by species at MBS (herbarium data)
eMBSspec2 <-ggplot(E.mbs.spec, aes(x = mean.tmean, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Temperature (degrees F)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
eMBSspec2
#earliest by species at PP (observational data)
ePPobs<-ggplot(E.pp.obs, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
#earliest by species at MBS (herbarium data)
eMBSspec <-ggplot(E.mbs.spec, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
#earliest by species at PP (herbarium data)
ePPspec<-ggplot(E.pp.spec, aes(x = mean.ppt, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Precipitation (inches)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
#earliest by species at PP (observational data)
ePPobs2 <-ggplot(E.pp.obs, aes(x = mean.tmean, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Temperature (degrees F)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
####TEMPERATURE
#earliest by species at MBS (observational data)
eMBSobs2 <-ggplot(E.mbs.obs, aes(x = mean.tmean, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[1]) +
labs(x = "Annual Temperature (degrees F)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
#earliest by species at MBS (herbarium data)
eMBSspec2 <-ggplot(E.mbs.spec, aes(x = mean.tmean, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Temperature (degrees F)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
#earliest by species at PP (herbarium data)
ePPspec2 <-ggplot(E.pp.spec, aes(x = mean.tmean, y = ordinal_date, color=data_type)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
scale_color_manual(values=dataCols[2]) +
labs(x = "Annual Temperature (degrees F)",
y = "Earliest Ordinal Date") +
theme_minimal() +
theme(panel.background = element_blank(),
legend.position = "none")
ePPspec2
#PRECIP PLOTS
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/eMBSobs.png", eMBSobs, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/ePPobs.png", ePPobs, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/eMBSspec.png", eMBSspec, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/ePPspec.png", ePPspec, width = 8, height = 6, units="in", dpi = 300)
#TEMPERATURE PLOTS
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/eMBSobs2.png", eMBSobs2, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/ePPobs2.png", ePPobs2, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/eMBSspec2.png", eMBSspec2, width = 8, height = 6, units="in", dpi = 300)
ggsave("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Figures/ePPspec2.png", ePPspec2, width = 8, height = 6, units="in", dpi = 300)
#libraries
library(dplyr)
library(ggplot2)
library(ggridges)
library(viridis)
library(khroma)
#Or load the data stack
load("/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Phenology collections project/phenologyCollProj_workspace.RData")
#Install as needed
install.packages("rstanarm")
install.packages("bayesplot")
dim(d2)
dim(phen)
View(prismMNTH)
library(bayesplot)
library(rstanarm)
library(lme4)
names(phen)
head(phen)
#each species?
spp <- unique(phen$scientific_name)
head(spp)
length(spp)
names(phen)
#each species?
spp <- unique(phen$scientific_name) #15 unique species in the dataset
lm_models <- list()
# Loop over each species
for (spp in spp) {
# Subset data for the current species
subset_data <- subset(phen, species == spp)
# Fit linear model for the current species
lm_model <- lm(ordinal_date ~ year, data = subset_data)
# Store the lm model in the list with species name as key
lm_models[[spp]] <- lm_model
}
# Subset data for the current species
subset_data <- subset(phen, species == scientific_name)
# Loop over each species
for (spp in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == scientific_name)
# Fit linear model for the current species
lm_model <- lm(ordinal_date ~ year, data = subset_data)
# Store the lm model in the list with species name as key
lm_models[[spp]] <- lm_model
}
lm_models$`Castilleja occidentalis`
summary(lm_models$`Castilleja occidentalis`)
summary(lm_models)
View(lm_model)
# Subset data for the current species
subset_data <- subset(phen, spp == scientific_name)
View(subset_data)
# Fit linear model for the current species
lm_model <- lm(ordinal_date ~ year, data = subset_data)
lm_model
summary(lm_model)
# Loop over each species
for (i in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == scientific_name)
# Fit linear model for the current species
lm_model <- lm(ordinal_date ~ year, data = subset_data)
# Store the lm model in the list with species name as key
lm_models[[i]] <- lm_model
}
summary(lm_models$`Castilleja occidentalis`)
summary(lm_models)
#each species?
spp <- unique(phen$scientific_name) #15 unique species in the dataset
lm_models <- list()
# Loop over each species
for (i in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == scientific_name)
# Fit linear model for the current species
lm_model <- lm(ordinal_date ~ year, data = subset_data)
# Store the lm model in the list with species name as key
lm_models[[i]] <- lm_model
}
summary(lm_models$`Castilleja occidentalis`)
summary(lm_models)
summary(lm_models$`Geum rossii`)
summary(lm_models$`Polemonium viscosum`)
#each species?
spp <- unique(phen$scientific_name) #15 unique species in the dataset
lm_models <- list()
# Loop over each species
for (i in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == i)
# Fit linear model for the current species
lm_model <- lm(ordinal_date ~ year, data = subset_data)
# Store the lm model in the list with species name as key
lm_models[[i]] <- lm_model
}
summary(lm_models$`Polemonium viscosum`)
summary(lm_models)
summary(lm_models$`Geum rossii`)
#each species?
spp <- unique(phen$scientific_name) #15 unique species in the dataset
lm_models <- list()
# Loop over each species
for (i in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == i)
# Fit linear model for the current species
lm_model <- lm(min(ordinal_date) ~ year, data = subset_data)
# Store the lm model in the list with species name as key
lm_models[[i]] <- lm_model
}
#each species?
spp <- unique(phen$scientific_name) #15 unique species in the dataset
lm_models <- list()
# Loop over each species
for (i in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == i)
# Fit linear model for the current species
lm_model <- lm(min(ordinal_date) ~ unique(year), data = subset_data)
# Store the lm model in the list with species name as key
lm_models[[i]] <- lm_model
}
# Fit linear model for the current species
lm_model <- lm(min(ordinal_date) ~ year, data = subset_data)
# Fit linear model for the current species
lm_model <- lm(min(ordinal_date) ~ unique(year), data = subset_data)
length(unique(phen$year))
length(min(phen$ordinal_date))
# Subset data for the current species
subset_data <- subset(phen, spp == i)
#each species?
spp <- unique(phen$scientific_name) #15 unique species in the dataset
lm_models <- list()
# Subset data for the current species
subset_data <- subset(phen, spp == i)
#aggregate to find minimum date for each species in each year
min_data <- aggregate(ordinal_date ~ year, data = subset_data, FUN = min)
min_data
# Fit linear model for the current species
lm_model <- lm(ordinal_date ~ year, data = min_data)
lm_model
lm_models <- list()
# Loop over each species
for (i in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == i)
#aggregate to find minimum date for each species in each year
min_data <- aggregate(ordinal_date ~ year, data = subset_data, FUN = min)
# Fit linear model for the current species
lm_model <- lm(ordinal_date ~ year, data = min_data)
# Store the lm model in the list with species name as key
lm_models[[i]] <- lm_model
}
summary(lm_models)
summary(lm_models$`Geum rossii`)
plot(lm_models$`Geum rossii`)
print(lm_models$`Geum rossii`)
summary(lm_models)
print(lm_models$`Polemonium viscosum`)
summary(lm_models)
summary(lm_models$`Polemonium viscosum`)
plot(lm_models$`Polemonium viscosum`)
table(lm_models)
table(lm_models$`Polemonium viscosum`)
plot(lm_models)
plot(lm_models%.)
plot(lm_models$.)
plot(lm_models[])
str(lm_models)
dim(lm_models)
str(lm_models)
class(lm_models)
is.recursive(lm_models)
library(purrr)
try<- flatten(lm_models)
View(try)
str(try)
##Extract the relevant elements for each species
model_summaries_lm <- data.frame(Species = character(),
Coefficients = character(),
Std_Errors = numeric(),
t_Values = numeric(),
p_Values = numeric(),
stringsAsFactors = FALSE)
##Extract the relevant elements for each species
model_summaries_lm <- data.frame(Species = character(),
Coefficients = character(),
Std_Errors = numeric(),
t_Values = numeric(),
p_Values = numeric(),
stringsAsFactors = FALSE)
for (i in spp) {
# Extract summary information from the linear model
summary_info <- summary(lm_models[[i]])
# Extract coefficients, standard errors, t-values, and p-values
coefficients <- summary_info$coefficients[, 1]
std_errors <- summary_info$coefficients[, 2]
t_values <- summary_info$coefficients[, 3]
p_values <- summary_info$coefficients[, 4]
# Create a data frame with the extracted information
species_summary <- data.frame(Species = i,
Coefficients = rownames(summary_info$coefficients),
Std_Errors = std_errors,
t_Values = t_values,
p_Values = p_values,
stringsAsFactors = FALSE)
# Append the species summary to the model_summaries data frame
model_summaries_lm <- rbind(model_summaries_lm, species_summary)
}
print(model_summaries_lm)
dm(model_summaries_lm)
dim(model_summaries_lm)
print(model_summaries_lm)
write.csv(model_summaries_lm, "/Users/elizabethlombardi/Desktop/Research/UNM/Erin phenology project/Phenology collections project/model_summaries_lm.csv")
library(lme4)
names(phen)
mixed_models <- list()
# Loop over each species
for (i in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == i)
# Aggregate to find the minimum date for each species in each year
min_data <- aggregate(ordinal_date ~ year, data = subset_data, FUN = min)
# Fit mixed-effects model with fixed effects for year and random effects for ppt and site
mixed_model <- lmer(ordinal_date ~ year + (1 | data_type) + (1 | site), data = min_data)
# Store the mixed-effects model in the list with species name as key
mixed_models[[i]] <- mixed_model
}
# Subset data for the current species
subset_data <- subset(phen, spp == i)
head(subset_Data)
head(subset_data)
# Aggregate to find the minimum date for each species in each year
min_data <- aggregate(ordinal_date ~ year, data = subset_data, FUN = min)
head(min_data)
mixed_models <- list()
# Loop over each species
for (i in spp) {
# Subset data for the current species
subset_data <- subset(phen, spp == i)
# Aggregate to find the minimum date for each species in each year
# min_data <- aggregate(ordinal_date ~ year, data = subset_data, FUN = min)
# Fit mixed-effects model with fixed effects for year and random effects for ppt and site
mixed_model <- lmer(ordinal_date ~ year + (1 | data_type) + (1 | site), data = min_data)
# Store the mixed-effects model in the list with species name as key
mixed_models[[i]] <- mixed_model
}
# Subset data for the current species
subset_data <- subset(phen, spp == i)
# Aggregate to find the minimum date for each species in each year
min_data <- aggregate(ordinal_date ~ year, data = subset_data, FUN = min)
# Fit mixed-effects model with fixed effects for year and random effects for ppt and site
mixed_model <- lmer(ordinal_date ~ year + (1 | data_type) + (1 | site), data = min_data)
# Subset data for the current species
subset_data <- subset(phen, spp == i)
# Fit mixed-effects model with fixed effects for year and random effects for ppt and site
mixed_model <- lmer(ordinal_date ~ year + (1 | data_type) + (1 | site), data = min_data)
names(subset_data)
# Fit mixed-effects model with fixed effects for year and random effects for ppt and site
mixed_model <- lmer(ordinal_date ~ year + (data_type) + (1 | site), data = min_data)
